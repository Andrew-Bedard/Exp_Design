install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
T = rnorm(1000)
T = runif(1000)
qqnorm(T)
T = rexp(n=1000,rate=1)
qqnorm(T)
W = qchisq(0.95,1)
qqnorm(W)
W = qchisq(0.95,1000)
qqnorm(W)
qqnorm(T)
T = rexp(n=1000,rate=10)
qqnorm(T)
T = rexp(n=1000,rate=100)
qqnorm(T)
T = rexp(n=1000,rate=0.4)
qqnorm(T)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(nu,powers1)
rm x
rm(x)
source('~/.active-rstudio-document')
rm(powers)
rm(powers1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(nu,powers1)
source('~/.active-rstudio-document')
plot(nu,powers2)
source('~/.active-rstudio-document')
plot(nu,powers3)
par(mfrow=c(1,3))
plot(nu,powers1)
plot(nu,powers2)
plot(nu,powers3)
par(mfrow=c(3,1))
plot(nu,powers1)
plot(nu,powers2)
plot(nu,powers3)
plot(nu,powers1,col=)
plot(nu,powers1,col="red")
rm(par)
par(mfrow=c(1,1))
plot(nu,powers1,col="red")
points(nu,powers2,col="blue")
points(nu,powers3,col="green")
source('~/.active-rstudio-document')
plot(nu,powers1,col="red")
points(nu,powers2,col="blue")
points(nu,powers3,col="green")
data <- read.csv("~/School/School/data_mining/assignment_2/Andys_Part/decimated_training_set_1_pct.csv")
View(data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?sample
mysample = sample(data,5000)
mysample = data[sample(nrow(data),5000),]
pairs(mysample)
View(data)
mysample = data[sample(nrow(data),1000),]
pairs(mysample)
`1_pct` <- read.csv("~/School/School/data_mining/assignment_2/Andys_Part/1_pct_proc.csv")
View(`1_pct`)
source('~/.active-rstudio-document', echo=TRUE)
?rm
1pct<- 1_pct
1pct = 1_pct
1pct=data.frame(1_pct)
1pct<-data.frame(1_pct)
rm(1_pct)
rm(1\_pct)
`1pct` <- read.csv("~/School/School/data_mining/assignment_2/Andys_Part/1_pct_proc.csv")
View(`1pct`)
source('~/School/School/data_mining/assignment_2/Andys_Part/data_exp.r', echo=TRUE)
pct <- read.csv("~/School/School/data_mining/assignment_2/Andys_Part/1_pct_proc.csv")
View(pct)
data <- read.csv("~/School/School/data_mining/assignment_2/Andys_Part/decimated_training_set_1_pct.csv")
View(data)
source('~/School/School/data_mining/assignment_2/Andys_Part/data_exp.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(data)
pct$X <- Null
pct$X <- NULL
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/School/Exp_Design/Assgn6")
source('~/School/Exp_Design/Assgn6/E2.R', echo=TRUE)
View(data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
passedlm = glm(passed~psi+gpa,family=binomial)
summary(passedlm)
data$psi=factor(data$psi)
data$gpa=factor(data$gpa)
passedlm2 = glm(passed~psi+gpa, family=binomial)
summary(passedlm2)
plot(c(0,coef(passedlm2)[2:3]),type="l")
function(x,y) -11.602 + 2.338*x + 3.063*y
psifunc <- function(x,y) {-11.602 + 2.338*x + 3.063*y}
#function to predict passing, x=psi, y=gpa
passest <- function(x,y) {-11.602 + 2.338*x + 3.063*y}
passest(1,3)
passest(0,3)
passest(1,4)
passest(0,4)
passest(1,3.5)
passest(0,3.5)
x=matrix(c(3,15,8,6),2,2);x
fisher.test(x)
?fisher.test
?hist
hist(data[,1],main="passed")
#2.2
source('~/School/Exp_Design/Assgn6/E2.R', echo=TRUE)
passest <- function(x,y) {exp(-11.602 + 2.338*x + 3.063*y)}
passest(1,3)
passest(0,3)
#function to predict passing, x=psi, y=gpa
passest <- function(x,y) {exp(-11.602 + 2.338*x + 3.063*y)/(1 + exp(-11.602 + 2.338*x + 3.063*y))}
passest(1,3)
passest(0,3)
1 - passest(1,3)
passest(0,3)
#function to predict passing, x=psi, y=gpa
passest <- function(x,y) {exp(-11.602 + 2.338*x + 3.063*y)/(1 + exp(-11.602 + 2.338*x + 3.063*y))}
#student with gpa 3 and received psi
passest(1,3)
#student with gpa 3 and did not receive psi
passest(0,3)
exp(2.338)
x=matrix(c(3,15,8,6),2,2);x
fisher.test(x)
tot
source('~/School/Exp_Design/Assgn6/E1.R', echo=TRUE)
?rpois
source('~/.active-rstudio-document', echo=TRUE)
View(data)
pairs(data)
rpois(1,2)
rpois(1,1)
hist(rpois(data[,2]),1)
hist(rpois(data[,2]),lambda = 1)
hist(rpois(data[,2],lambda = 1))
hist(rpois(data[,3],lambda = 1))
par(mfrow=c(1,1))
source('~/.active-rstudio-document', echo=TRUE)
hist(rpois(data[,6],lambda = 1))
hist(rpois(data[,6],lambda = 2))
hist(rpois(data[,6],lambda = 50))
colnames(data)
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size+numelc+numregim, family=poisson)
summary(africalm)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size+numregim, family=poisson,data=data)
summary(africalm)
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size, family=poisson,data=data)
summary(africalm)
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn, family=poisson,data=data)
summary(africalm)
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote,
family=poisson,data=data)
summary(africalm)
africalm = glm(miltcoup~oligarchy+pollib+parties,
family=poisson,data=data)
summary(africalm)
confint(africalm)
coef(africalm)
plot(fitted(africalm),residuals(africalm))
plot(log(fitted(africalm)),residuals(africalm))
plot(log(fitted(africalm)),residuals(africalm,type="response"))
fullafricalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size+numelec+numregim, family=poisson,data=data)
summary(fullafricalm)
plot(fitted(fullafricalm),residuals(fullafricalm))
plot(log(fitted(fullafricalm)),residuals(fullafricalm))
plot(log(fitted(fullafricalm)),residuals(fullafricalm,type="response"))
pairs(data)
?pairs
pairs(miltcoup,oligarchy,pollib,parties,data=data)
pairs(miltcoup~oligarchy+pollib+parties,
family=poisson,data=data)
pairs(miltcoup~oligarchy+pollib+parties,
family=poisson,data=data)
pairs(miltcoup~oligarchy+pollib+parties,data=data)
data$pollib = as.factor(data$pollib)
africalm = glm(miltcoup~oligarchy+pollib+parties,
family=poisson,data=data)
summary(africalm)
africalm = glm(multcoup~oligarchy+pollib2+parties,family=poisson,data=data)
summary(africalm)
pairs(miltcoup~oligarchy+pollib+parties,data=data)
data$pollib = as.factor(data$pollib)
pairs(miltcoup~oligarchy+pollib+parties,data=data)
pairs(miltcoup~oligarchy+parties,data=data)
round(cooks.distance(africalm),2)
plot(cooks.distance(africalm))
round(cooks.distance(fullafricalm),2)
plot(cooks.distance(fullafricalm))
round(cooks.distance(africalm),2)
plot(cooks.distance(africalm))
plot(fitted(africalm),residuals(africalm))
plot(log(fitted(africalm)),residuals(africalm))
plot(log(fitted(africalm)),residuals(africalm,type="response"))
plot(fitted(fullafricalm),residuals(fullafricalm))
plot(log(fitted(fullafricalm)),residuals(fullafricalm))
plot(log(fitted(fullafricalm)),residuals(fullafricalm,type="response"))
par(mfrow=c(1,2))
source('~/School/Exp_Design/Assgn6/E1.R', echo=TRUE)
plot(loglongevity~thorax,pch=as.character(activity))
par(mfrow=c(1,1))
plot(loglongevity~thorax,pch=as.character(activity))
summary(activitylm)
activitylm = lm(longevity~activity,data=data)
summary(activitylm)
activitylm = lm(loglongevity~activity,data=data)
# we reject H0 so the activity has an influence on the longevity
anova(activitylm)
activitylm = lm(longevity~activity,data=data)
# we reject H0 so the activity has an influence on the longevity
anova(activitylm)
boxplot(longevity~activity)
par(mfrow=c(1,1))
boxplot(longevity~activity)
activityThoraxlm = lm(loglongevity~activity+thorax,data=data)
# we reject H0 so the activity and thorax has an influence on the longevity
anova(activityThoraxlm)
summary(activityThoraxlm)
data$activity = as.factor(data$activity)
activityThoraxlm = lm(loglongevity~activity+thorax,data=data)
summary(activityThoraxlm)
mean(data$thorax)
View(data)
#high
mean(data$thorax)*2.97899+1.21893
#isolated
mean(data$thorax)*2.97899+1.21893+0.40998
#low
mean(data$thorax)*2.97899+1.21893+0.28570
min(data$thorax)
min(data$thorax)
#high
min(data$thorax)*2.97899+1.21893
#isolated
min(data$thorax)*2.97899+1.21893+0.40998
#low
min(data$thorax)*2.97899+1.21893+0.28570
plot(thorax,loglongevity)
plot(thorax,loglongevity, xlab="thorax length",ylab="log(longevity)")
plot(thorax,loglongevity, xlab="thorax length",ylab="log(longevity)")
activitylm = lm(loglongevity~activity,data=data)
# we reject H0 so the activity has an influence on the longevity
anova(activitylm)
data = read.table("psi.txt", header=T)
attach(data)
#Table and histogram
tot=xtabs(~psi+passed); tot
hist(data[,1],main="passed")
pairs(data)
hist(data$psi,main="passed")
pairs(data)
data = read.table("fruitflies.txt", header=T)
attach(data)
hist(data$thorax)
source('~/School/Exp_Design/Assgn6/E3.R', echo=TRUE)
fullafricalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size+numelec+numregim, family=poisson,data=data)
summary(fullafricalm)
summary(fullafricalm)
summary(africalm)
#3.4
#remove numelec, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size+numregim, family=poisson,data=data)
summary(africalm)
#remove numregim, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size, family=poisson,data=data)
summary(africalm)
#remove size, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn, family=poisson,data=data)
summary(africalm)
#remove popn, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote,
family=poisson,data=data)
summary(africalm)
#remove pctvote, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties,
family=poisson,data=data)
summary(africalm)
confint(africalm)
coef(africalm)
#3.4
#remove numelec, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size+numregim, family=poisson,data=data)
summary(africalm)
#remove numregim, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn+size, family=poisson,data=data)
summary(africalm)
#remove size, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote
+popn, family=poisson,data=data)
summary(africalm)
#remove popn, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties+pctvote,
family=poisson,data=data)
summary(africalm)
#remove pctvote, has highest p-value
africalm = glm(miltcoup~oligarchy+pollib+parties,
family=poisson,data=data)
summary(africalm)
confint(africalm)
coef(africalm)
