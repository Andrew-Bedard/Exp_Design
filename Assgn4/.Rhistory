install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
T = rnorm(1000)
T = runif(1000)
qqnorm(T)
T = rexp(n=1000,rate=1)
qqnorm(T)
W = qchisq(0.95,1)
qqnorm(W)
W = qchisq(0.95,1000)
qqnorm(W)
qqnorm(T)
T = rexp(n=1000,rate=10)
qqnorm(T)
T = rexp(n=1000,rate=100)
qqnorm(T)
T = rexp(n=1000,rate=0.4)
qqnorm(T)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(nu,powers1)
rm x
rm(x)
source('~/.active-rstudio-document')
rm(powers)
rm(powers1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(nu,powers1)
source('~/.active-rstudio-document')
plot(nu,powers2)
source('~/.active-rstudio-document')
plot(nu,powers3)
par(mfrow=c(1,3))
plot(nu,powers1)
plot(nu,powers2)
plot(nu,powers3)
par(mfrow=c(3,1))
plot(nu,powers1)
plot(nu,powers2)
plot(nu,powers3)
plot(nu,powers1,col=)
plot(nu,powers1,col="red")
rm(par)
par(mfrow=c(1,1))
plot(nu,powers1,col="red")
points(nu,powers2,col="blue")
points(nu,powers3,col="green")
source('~/.active-rstudio-document')
plot(nu,powers1,col="red")
points(nu,powers2,col="blue")
points(nu,powers3,col="green")
source('~/School/Exp_Design/Assgn4/E2.R', echo=TRUE)
setwd("~/School/Exp_Design/Assgn4")
source('~/School/Exp_Design/Assgn4/E2.R', echo=TRUE)
?boxplot
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
xtabs(time~skill+interface,data=search)
attach(search)
aovpen=lm(time~skill+interface,data=search)
anova(aovpen)
summary(aovpen)
source('~/.active-rstudio-document', echo=TRUE)
plot(fitted(aovpen),residuals(aovpen))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
friedman.test(time,skill,interface)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(cream)
source('~/School/Exp_Design/Assgn4/E2.R', echo=TRUE)
View(search)
source('~/School/Exp_Design/Assgn3/Ex4.R', echo=TRUE)
dogs <- read.table("~/School/Exp_Design/Assgn3/dogs.txt", header=TRUE, quote="\"")
View(dogs)
source('~/School/Exp_Design/Assgn3/Ex4.R', echo=TRUE)
len=length(dogs[,1])
boxplot(dogs,ylab="Concentration (1.0e-9g/mm)")
#4.2
par(mfrow=c(2,2))
qqnorm(dogs[,1],ylab="Isofluorane Concentration")
qqnorm(dogs[,2],ylab="Halothane Concentration")
qqnorm(dogs[,3],ylab="Cyclopropane Concentration")
#4.3
dogframe = data.frame(yield=as.vector(as.matrix(dogs)),
variety=factor(rep(1:3,each=10)))
dogaov=lm(yield~variety,data=dogframe)
anova(dogaov)
summary(dogaov)
#Calculate expected value
u1=0.4340;
u2=0.0350+u1
u3=0.4190+u1
print(u1,u2,u3)
#4.4
attach(dogframe)
kruskal.test(yield,variety)
par(mfrow=c(1,1));qqnorm(dogaov$residuals)
#Calculate and print population variances
for (i in 1:3){
print(sum((dogs[,i]-mean(dogs[,i]))^2)/(len-1))
}
View(dogframe)
source('~/.active-rstudio-document', echo=TRUE)
View(searchframe)
View(search)
source('~/.active-rstudio-document', echo=TRUE)
View(searchframe)
kruskal.test(time,interface)
xtabs(time~skill+interface,data=search)
summary(aovpen)
srcaov = lm(time~skill*time,data=search)
srcaov = lm(time~skill*interface,data=search)
summary(srcaov)
srcmult = glht(srcaov,linfct=mcp(interface="Tukey"))
library(multcomp)
require(multcomp)
library(multcomp)
install.packages(c("multcomp", "lme4"))
library(multcomp)
srcmult = glht(srcaov,linfct=mcp(interface="Tukey"))
srcmult = glht(srcaov,linfct=mcp(skill="Tukey"))
length(search)
View(search)
I=3; B=5; N=1
for (i in 1:B) print(sample(1:(N*I)))
xtabs(time~skill+interface,data=search)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
kruskal.test(time,interface)
kruskal.test(time,skill)
kruskal.test(time,interface)
source('~/.active-rstudio-document', echo=TRUE)
View(cream)
sample_slices = sample(1:18, 18)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(cream)
source('~/.active-rstudio-document', echo=TRUE)
search = read.table("search.txt")
aovsrch=lm(time~skill+interface,data=search)
anova(aovsrch)
anv = lm(time~skill*interface,data=search)
anova(anv)
anv = lm(time~interface*skill,data=search)
anova(anv)
summary(aovsrch)
boxplot(interface~skill)
source('~/.active-rstudio-document', echo=TRUE)
summary(anovacid)
View(cream)
creamlmer = lmer(acidity~starter+batch+position,data=cream,REML=FALSE)
library(lme4)
creamlmer = lmer(acidity~starter+batch+position,data=cream,REML=FALSE)
anovacid = lm(acidity~starter+batch+position,data=cream)
anova(anovacid)
summary(anovacid)
cream$starter = factor(cream$starter)
cream$position = factor(cream$position)
creamlm = lm(acidity~starter*position+batch+batch:starter,data=cream)
anova(creamlm)
source('~/.active-rstudio-document', echo=TRUE)
clear
clc
source('~/.active-rstudio-document', echo=TRUE)
library(lme4)
creamlmer = lmer(acidity~starter+batch+position,data=cream,REML=FALSE)
creamlmer = lmer(acidity~starter+position+(1|batch),data=cream,REML=FALSE)
anova(creamlm)
creamlmer = lmer(acidity~starter*position+(1|batch),data=cream,REML=FALSE)
creamlmer = lmer(acidity~starter+position+(1|batch),data=cream,REML=FALSE)
anova(creamlm)
summary(creamlm)
summary(anovacid)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
creamler1 = lmer(acidity~position+(1|batch),data=cream,REML=FALSE)
anova(creamler1,creamler)
creamlmer1 = lmer(acidity~position+(1|batch),data=cream,REML=FALSE)
anova(creamlmer1,creamlmer)
search = read.table("search.txt")
time =search$time
skill = search$skill
interface = search$interface
#2.1
#student = as.vector(as.matrix)
I=3; B=5; N=1
for (i in 1:B) print(sample(1:(N*I)))
#2.2
boxplot(time~skill,xlab="skill",ylab="time", main="Time per Skill")
boxplot(time~interface,xlab="interface",ylab="time", main="Time per Interface")
interaction.plot(skill,interface,time,lwd=2,col=rainbow(3))
interaction.plot(interface,skill,time,lwd=2,col=rainbow(8))
search = read.table("search.txt")
time =search$time
skill = search$skill
interface = search$interface
#2.1
#student = as.vector(as.matrix)
I=3; B=5; N=1
for (i in 1:B) print(sample(1:(N*I)))
#2.2
boxplot(time~skill,xlab="skill",ylab="time", main="Skill vs Time")
boxplot(time~interface,xlab="interface",ylab="time", main="Interface vs Time")
interaction.plot(skill,interface,time,lwd=2,col=rainbow(3))
interaction.plot(interface,skill,time,lwd=2,col=rainbow(8))
search$interface = factor(search$interface)
kruskal.test(time,interface)
search = read.table("search.txt")
time =search$time
skill = search$skill
interface = search$interface
kruskal.test(time,interface)
interface = factor(search$interface)
kruskal.test(time,interface)
friedman.test(time,interface,skill)
friedman.test(time,skill,interface)
search = read.table("search.txt")
time =search$time
skill = search$skill
interface = search$interface
friedman.test(time,interface,skill)
friedman.test(time,skill,interface)
interface = factor(search$interface)
friedman.test(time,interface,skill)
skill = factor(search$skill)
kruskal.test(time,interface)
friedman.test(time,interface,skill)
friedman.test(time,skill,interface)
testaov = lm(time~interface,data=search)
summary(testaov)
contrasts(search$interface)=contr.sum
interface = as.factor(search$interface)
contrasts(search$interface)=contr.sum
kruskal.test(time,interface)
contrasts(interface)=contr.sum
testingaov2=lm(time~interface,data=search)
summary(testingaov2)
testingaov2=lm(time~interface)
summary(testingaov2)
source('~/.active-rstudio-document', echo=TRUE)
anv = lm(time~skill*interface,data=search)
anova(anv)
source('~/.active-rstudio-document', echo=TRUE)
aovsrch=lm(time~skill+interface)
source('~/School/Exp_Design/Assgn4/E2.R', echo=TRUE)
contrasts(interface)=contr.sum
srchaov2=lm(time~interface)
summary(srchaov2)
kruskal.test(time,interface)
?kruskal.test
source('~/.active-rstudio-document', echo=TRUE)
friedman.test(time,interface,skill)
anv = lm(time~skill*interface,data=search)
anova(anv)
anv = lm(time~interface*skill,data=search)
anova(anv)
anv = lm(time~interface*skill)
anova(anv)
summary(aovsrch)
anovinter = lm(time~interface)
anova(anovinter)
summary(anovinter)
anova(anovinter)
library(lme4)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aovsrch=lm(time~skill+interface)
anova(aovsrch)
summary(aovsrch)
skill_4 <- subset(skill,Eel=="4")
skill_4 <- subset(skill,skill=="4")
interface_3<-subset(interface,interface=="3")
aovsrch=lm(time~skill_4+interface_3)
aovsrch=lm(time~skill_4*interface_3)
anv = lm(time~interface*skill,data=search)
anova(anv)
cream = read.table("cream.txt",header=T)
cream$starter = factor(cream$starter)
cream$position = factor(cream$position)
anovacid = lm(acidity~starter+batch+position)
anovacid = lm(acidity~starter+batch+position,data=cream)
anova(anovacid)
anovacid = lm(acidity~starter+position+batch,data=cream)
anova(anovacid)
source('~/School/Exp_Design/Assgn4/E1.R', echo=TRUE)
source('~/School/Exp_Design/Assgn4/E4.R', echo=TRUE)
View(cow)
View(cow)
cowlmer = lmer(milk ~ treatment + order+(1|id), data=cow, REML=FALSE)
anova(cowlmer)
summary(cowlmer)
source('~/.active-rstudio-document', echo=TRUE)
testing = slices(1:18,18)
testing = sample(1:18,18)
testing
source('~/School/Exp_Design/Assgn4/E3.R', echo=TRUE)
source('~/School/Exp_Design/Assgn4/E3.R', echo=TRUE)
source('~/School/Exp_Design/Assgn4/E3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/School/Exp_Design/Assgn4/E4.R', echo=TRUE)
View(cow)
