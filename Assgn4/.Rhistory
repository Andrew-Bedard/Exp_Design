m=30
n=30
mu=180
N = seq(175,185,by=0.1)
sd=5
p = numeric(length(N))
for (nu in N) {
nu
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(p)
m=30
n=30
mu=180
N = seq(175,185,by=0.1)
sd=5
p = numeric(length(N))
b = 0
for (nu in N) {
nu
b++
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(p)
m=30
n=30
mu=180
N = seq(175,185,by=0.1)
sd=5
p = numeric(length(N))
b = 0
for (nu in N) {
nu
b+=1
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(p)
m=30
n=30
mu=180
N = seq(175,185,by=0.1)
sd=5
p = numeric(length(N))
b = 0
for (nu in N) {
nu
b=b+1
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(p)
plot(p, N)
m=30
n=30
mu=180
nu = seq(175,185,by=0.1)
sd=5
p = numeric(length(nu))
b = 0
for (nu_tmp in nu) {
b=b+1
x=rnorm(m,mu,sd)
y=rnorm(n,nu_tmp,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(p, nu)
plot(nu, p)
m=100
n=100
mu=180
nu = seq(175,185,by=0.1)
sd=5
p = numeric(length(nu))
b = 0
for (nu_tmp in nu) {
b=b+1
x=rnorm(m,mu,sd)
y=rnorm(n,nu_tmp,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(nu, p)
m=30
n=30
mu=180
nu = seq(175,185,by=0.1)
sd=100
p = numeric(length(nu))
b = 0
for (nu_tmp in nu) {
b=b+1
x=rnorm(m,mu,sd)
y=rnorm(n,nu_tmp,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(nu, p)
source('~/.active-rstudio-document', echo=TRUE)
#2.1
m=30
n=30
mu=180
nu=180
sd=10
B=1000
p=numeric(B)
for (b in 1:B) {
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
sum(p<0.05)
sum(p<0.1)
hist(p)
#2.2
sd=1
p=numeric(B)
for (b in 1:B) {
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
sum(p<0.05)
sum(p<0.1)
hist(p)
#2.3
nu=175
sd=5
p=numeric(B)
for (b in 1:B) {
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
sum(p<0.05)
sum(p<0.1)
hist(p)
par(mfrow=c(1,1))
par(pin=c(2.5,5))
qqnorm(rnorm(20))
#2.1
m=30
n=30
mu=180
nu=180
sd=10
B=1000
p=numeric(B)
for (b in 1:B) {
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
sum(p<0.05)
sum(p<0.1)
par(mfrow=c(1,1))
hist(p)
par(pin=c(2.5,5))
hist(p)
par(pin=c(5,5))
hist(p)
m=30
n=30
mu=180
nu=180
sd=10
B=1000
p=numeric(B)
for (b in 1:B) {
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
sum(p<0.05)
sum(p<0.1)
par(pin=c(5,5))
hist(p)
#2.2
sd=1
p=numeric(B)
for (b in 1:B) {
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
sum(p<0.05)
sum(p<0.1)
hist(p)
#2.3
nu=175
sd=5
p=numeric(B)
for (b in 1:B) {
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
sum(p<0.05)
sum(p<0.1)
hist(p)
#3.1
m=30
n=30
mu=180
nu = seq(175,185,by=0.1)
sd=5
p = numeric(length(nu))
b = 0
for (nu_tmp in nu) {
b=b+1
x=rnorm(m,mu,sd)
y=rnorm(n,nu_tmp,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(nu, p)
#3.2
m=100
n=100
p = numeric(length(nu))
b = 0
for (nu_tmp in nu) {
b=b+1
x=rnorm(m,mu,sd)
y=rnorm(n,nu_tmp,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(nu, p)
#3.3
m=30
n=30
sd=100
p = numeric(length(nu))
b = 0
for (nu_tmp in nu) {
b=b+1
x=rnorm(m,mu,sd)
y=rnorm(n,nu_tmp,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
plot(nu, p)
install.packages(c("multcomp", "lme4"))
library(multcomp)
library(lme4)
bread = read.table("bread.txt")
setwd("~/Master/ExpDesignAndDataAnalysis/Assignments/Assgn4")
bread = read.table("bread.txt")
bread
bread = read.table("bread.txt")
slices = []
slices = array()
slices = array(18)
slices
slices = array(18*0)
slices
slices = array(0:0, dim=c(18))
slices
slices = array(1:18, dim=c(18))
slices
x3 <- sample(1:18, 18)
x3
sort(x3)
sample_slices = sample(1:18, 18)
View(bread)
plot(bread$hours, bread$environment)
plot(hours, environment)
plot(hours, humidity)
library(multcomp)
library(lme4)
bread = read.table("bread.txt")
hours = bread$hours
environment = bread$environment
humidity = bread$humidity
#1.1
sample_slices = sample(1:18, 18)
#1.2
plot(hours, environment)
plot(hours, humidity)
boxplot(hours, environment)
boxp
boxplot(hours, environment)
boxplot(hours, humidity)
boxplot(hours, environment)
boxplot(hours, humidity)
#2.1
clouds = read.table("clouds.txt", header=T)
len = length(clouds[,1])
nrml = rnorm(len)
#2.1
clouds = read.table("clouds.txt", header=T)
len = length(clouds[,1])
nrml = rnorm(len)
boxplot(humidity, environment)
boxplot(humidity, environment)
boxplot(environment)
boxplot(environment)
names(bread)
hours
library(multcomp)
library(lme4)
bread = read.table("bread.txt")
names(bread)
#1.1
sample_slices = sample(1:18, 18)
#1.2
boxplot(environment)
boxplot(as.matrix(environment))
boxplot(as.matrix(environment))
boxplot(bread)
?boxplot
boxplot(bread~humidity)
boxplot(bread~humidity, data=bread)
boxplot(hours~humidity, data=bread)
boxplot(hours~environment, data=bread)
?interaction.plot
interaction.plot(hours, humidity)
interaction.plot(humidity, response=hours)
interaction.plot(hours, humidity, environment)
interaction.plot(hours, humidity, environment)
interaction.plot(hours, humidity)
interaction.plot(humidity, environment, hours)
interaction.plot(humidity, environment, hours)
interaction.plot(environment, humidity, hours)
interaction.plot(hours, humidity, environment)
hours
interaction.plot(environment, humidity, hours)
h
interaction.plot(humidity, hours)
interaction.plot(humidity, humidity, hours)
interaction.plot(humidity, environment, hours)
interaction.plot(environment, humidity, hours)
boxplot(hours~environment)
aov(humidity ~ environment, data=bread)
?aov
anova(humidity ~ environment, data=bread)
aovbread = lm(humidity ~ environment, data=bread)
?lm
aovbread = lm(hour ~ environment, data=bread)
aovbread = lm(hours ~ environment, data=bread)
anova(aovbread)
aovbread = lm(hours ~ humidity, data=bread)
anova(aovbread)
aovbread = lm(humidity ~ environment, data=bread)
aovbread = lm(hours ~ environment  humidity, data=bread)
aovbread = lm(hours ~ environment+humidity, data=bread)
anova(aovbread)
plot(aovenvhum)
aovbread = lm(hours ~ environment+humidity, data=bread)
aovenvhum = anova(aovbread)
aovbread = lm(hours ~ environment, data=bread)
aovenv = anova(aovbread)
aovbread = lm(hours ~ humidity, data=bread)
aovhum = anova(aovbread)
plot(aovenvhum)
plot(aovhum)
plot(aovenv)
aovenv$residuals
aovenv = anova(aovbread)
aovbread = lm(hours ~ environment, data=bread)
aovenv = anova(aovbread)
aovenv
aovenv$residuals
aovenv$Residuals
aovenv$Residuals
aovenv.Residuals
aovenv.res
aovbread.res
resid(aovbread)
aovhum
aovenvhum = lm(hours ~ environment+humidity, data=bread)
anova(aovenvhum)
aovenv = lm(hours ~ environment, data=bread)
anova(aovenv)
aovhum = lm(hours ~ humidity, data=bread)
anova(aovhum)
qqplot(resid(aovhum))
qqplot(resid(aovhum))
qqplot(residuals(aovhum))
residuals(aovhum)
qqnorm(residuals(aovhum))
qqnorm(residuals(aovenv))
qqnorm(residuals(aovenvhum))
